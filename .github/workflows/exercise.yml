name: "Node JS Artifact Repository"

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: List files
        run: ls -al && pwd
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build Project
        run: npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-${{ matrix.node-version }}-build
          path: ./dist

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [16, 18]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run Tests
        run: npm test

  docker:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
    steps:
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: node-18-build
          path: ./dist
      - run: ls -al
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest .
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
  deploy:
    runs-on: ubuntu-latest
    needs: ["docker", "test"]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    environment:
    name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: print git Variables
        run: echo "${{ toJSON(github) }}"
      - name: Print Environment Variables
        run: |
          echo "API_URL=${{ vars.API_URL }}"
          echo "DB_NAME=${{ vars.DB_NAME }}"
